// Generated by CoffeeScript 1.6.3
(function() {
  var __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  $(function() {
    var Board, Card, Game, Player, card, cards, defaultDifficulty, game, player, _i, _len, _ref, _results;
    Card = (function() {
      function Card(name) {
        this.name = name;
      }

      return Card;

    })();
    Player = (function() {
      function Player() {
        this.determineHighScore = __bind(this.determineHighScore, this);
        this.highScore = this.determineHighScore();
      }

      Player.prototype.determineHighScore = function() {
        var score;
        score = localStorage.getItem("matching.highScore");
        if (score) {
          console.log("found highscore: " + score);
          return parseInt(score);
        } else {
          return 0;
        }
      };

      return Player;

    })();
    Board = (function() {
      function Board(possibleCards, possibleMatches) {
        this.setUpBoard = __bind(this.setUpBoard, this);
        this.prepareCards = __bind(this.prepareCards, this);
        this.possibleMatches = possibleMatches;
        this.cards = this.prepareCards(possibleCards);
        this.setUpBoard();
      }

      Board.prototype.prepareCards = function(possibleCards) {
        var sliced;
        console.log('preparing cards');
        sliced = cards.slice(0, this.possibleMatches);
        return sliced.concat(sliced).shuffle();
      };

      Board.prototype.setUpBoard = function() {
        var _this = this;
        console.log('setting up the board');
        return $('#board').find('span.imageId').each(function(index) {
          return $(_this).html(_this.cards[index].name);
        });
      };

      return Board;

    })();
    Game = (function() {
      function Game(player, cards, difficulty) {
        this.player = player;
        this.board = new Board(cards, difficulty);
      }

      return Game;

    })();
    cards = [new Card('spidey'), new Card('waldo'), new Card('megaman'), new Card('rainbowdash'), new Card('ironman'), new Card('mario'), new Card('link'), new Card('scarlet'), new Card('wolverine'), new Card('trooper'), new Card('ninja'), new Card('aidorucat'), new Card('audrey'), new Card('kimono'), new Card('mardigras'), new Card('mom')];
    defaultDifficulty = 8;
    player = new Player();
    game = new Game(player, cards, defaultDifficulty);
    _ref = game.board.cards;
    _results = [];
    for (_i = 0, _len = _ref.length; _i < _len; _i++) {
      card = _ref[_i];
      _results.push(console.log(card.name));
    }
    return _results;
  });

}).call(this);
